//Check if a given binary tree is completed. 
//A complete binary tree is one in which every level of the binary tree is completely filled except possibly the last level. 
//Furthermore, all nodes are as far left as possible.
/**
 * public class TreeNode {
 *   public int key;
 *   public TreeNode left;
 *   public TreeNode right;
 *   public TreeNode(int key) {
 *     this.key = key;
 *   }
 * }
 */
public class Solution {
  public boolean isCompleted(TreeNode root) {
    if (root == null) {
      return true;
    }
    Queue<TreeNode> queue = new LinkedList<TreeNode>();
    boolean flag = false;
    queue.offer(root);
    while (!queue.isEmpty()){
      TreeNode cur = queue.poll();
      if (cur.left == null) {
         flag = true;
      }else if (flag) {
         return false;
      }else {
         queue.offer(cur.left);
      }
      if (cur.right == null) {
         flag = true;
      }else if (flag) {
         return false;
      }else {
         queue.offer(cur.right);
      }
    }
    return true;
  }
}
