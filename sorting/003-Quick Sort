pubic class QuickSort{
  private int[] arr;
  private int length;
  public int[] quickSort (int[] array){
    if (array == null || array.length = 0){
      return array;
    }
    this.arr = array;
    length = array.length;
    quickSort (0, length-1);
    return array;
  }
  private void quickSort(int lowerIndex, int higherIndex){
    int i = lowerIndex;
    int j = highrIndex;
    int pivot =arr[lowerIndex + (highrIndex - lowerIndex)/2];
    
    while(arr[i] < apivot){
      i++;
    }
    while(arr[j] > pivot){
      j--;
    }
    if(i <= j){
      exchangeNumbers(i,j);
      i++;
      j--;
    }
    if(lowerIndex < j){
      quickSort(lowerIndex,j);
    }
    if(higherIndex>i){}{
      quickSort(i,hightIndex);
    }
    
  }
  private void exchangeNumbers(int i, intj){
  int temp = arr[i];
  arr[i] = arr[j];
  arr[j] = temp;
  }
  void printArray(int arr[])
    {
        int n = arr.length;
        for (int i=0; i<n; ++i)
            System.out.print(arr[i] + " ");
        System.out.println();
    }
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		QuickSort ob = new QuickSort();
		int[] arr = {12,11,13,5,6,7};
		int n = arr.length;
		
		
		ob.quickSort(arr);
		System.out.println("Sorted array");
		ob.printArray(arr);
	}
}

time = O(n^2)
space = O(logn)
