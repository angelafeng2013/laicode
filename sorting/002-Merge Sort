package laioffer;

public class MergeSort {
	public int[] mergeSort(int[] arr){
		int[] temp = new int[arr.length];
		mergeSort(arr, temp, 0, arr.length-1);
		return arr;
	}
        public void mergeSort(int[] arr, int[] temp,int left,int right){
		if(left < right){
			int center = left + (right-left)/2;
			mergeSort(arr, temp, left, center);
			mergeSort(arr, temp, center+1, right);
			merge(arr, temp, left, center+1, right);
		}
	}
	public void merge(int[] arr, int[] temp, int left, int right, int rightEnd){
		int leftEnd = right - 1;
		int k = left;
		int num = rightEnd - left + 1;
		while(left <= leftEnd && right <= rightEnd){
			if(arr[left] <= arr[right]){
				temp[k++] = arr[left++];
			}else{
				temp[k++] = arr[right++];
			}
		}
		while (left <= leftEnd){
			temp[k++] = arr[left++];
		}
		while (right <= rightEnd) {
			temp[k++] = arr[right++];
		}
		for(int i = 0; i<num; i++, rightEnd--){
			arr[rightEnd] =temp[rightEnd];
		}
	}
	 // Prints the array
	void printArray(int arr[])
    {
        int n = arr.length;
        for (int i=0; i<n; ++i)
            System.out.print(arr[i] + " ");
        System.out.println();
    }
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		MergeSort ob = new MergeSort();
		int[] arr = {12,11,13,5,6,7};
		int n = arr.length;
		
		
		ob.mergeSort(arr);
		System.out.println("Sorted array");
		ob.printArray(arr);
	}

}




time = O(n+logn = nlogn)
space = O(n)
