package laioffer;

import java.util.Arrays;

public class searchM {

	public int[] search(int[][] matrix, int target) {
		if (matrix.length == 0 || matrix[0].length == 0) {
			return new int[] { -1, -1 };
		}

		int row = matrix.length;
		int col = matrix[0].length;
		int i = 0;
		int j = row * col - 1;
		while (i <= j) {
			int mid = i + (j - i) / 2;
			int r = mid / col;
			int l = mid % col;
			if (matrix[r][l] == target) {
				return new int[] { r, l };
			} else if (matrix[r][l] < target) {
				i = mid + 1;
			} else {
				j = mid - 1;
			}
		}
		return new int[] { -1, -1 };
	}
	public static void main(String[] args){
		searchM ob = new searchM();
		int[][] matrix = { {1, 2, 3}, {4, 5, 7}, {8, 9, 10} };
		int target = 7;
		ob.search(matrix, target);
		System.out.print(Arrays.toString(ob.search(matrix, target)));
		
	}
}
